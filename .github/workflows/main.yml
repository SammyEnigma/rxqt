name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        qt: [5.9.8, 5.15.2, 6.0.0]
        exclude:
          - os: ubuntu-latest
          - qt: 6.0.0

    runs-on: ${{ matrix.os }}

    steps:
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.qt }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: mkdir
      run: mkdir testbuild
    - name: qmake
      if: ${{ matrix.os != 'windows-latest' }}
      run: qmake ../test/test.pro -recursive
      working-directory: testbuild
    - name: make check
      if: ${{ matrix.os != 'windows-latest' }}
      run: make check
      working-directory: testbuild
    - name: qmake
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        qmake ../test/test.pro -recursive
      working-directory: testbuild
      shell: cmd
    - name: nmake check
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        nmake check
      working-directory: testbuild
      shell: cmd
